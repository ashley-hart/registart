{"version":3,"sources":["images/logo2.svg","images/aboutmepic.jpg","components/Navbar/NavbarElements.js","components/Navbar/index.js","components/Form/FormElements.js","components/Form/index.js","pages/PageComponents.js","pages/home.js","pages/about.js","components/Editor/EditorElements.js","components/Editor/EditorForm.js","components/Editor/Appointment.js","components/Editor/index.js","pages/editor.js","components/Form/ContactForm.js","pages/contact.js","pages/signin.js","pages/retcode.js","components/Context/UserContext.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","styled","nav","NavLink","Link","Bars","FaBars","NavMenu","div","NavBtn","NavBtnLink","Navbar","to","src","logo","alt","activeStyle","H2","h2","FormWrapper","FormContainer","form","TextFeild","input","NotesFeild","textarea","SubmitButton","button","Label","label","Form","useForm","register","handleSubmit","generateRetCode","data","code","name","substring","email","date","Math","floor","random","toString","console","log","onSubmit","appointment","time","phoneNumber","apptType","notes","JSON","stringify","axios","post","then","res","alert","window","location","reload","htmlFor","type","ref","required","step","min","max","defaultValue","pattern","Page","PageContainer","Title","h1","P","p","Image","img","Home","About","picture","ListContainer","CardDiv","Info","ButtonDiv","DeleteButton","AcceptButton","List","ul","EditForm","props","appt","_id","retCode","value","Appointment","deleteAppointment","id","confirm","delete","updateAppointment","ReactDOM","render","EditorForm","document","getElementById","Date","length","toDateString","onClick","displayAppointments","AppointmentList","useState","appointments","setAppointments","useEffect","a","get","result","map","Editor","ContactForm","cinfo","Contact","SignIn","user","username","password","token","localStorage","setItem","RetCode","numProps","obj","c","key","hasOwnProperty","fetchData","response","target","info","undefined","arrayLen","i","createContext","App","userData","setUserData","getItem","headers","tokenRes","userRes","checkLoggedIn","className","UserContext","Provider","path","exact","component","Boolean","hostname","match","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,g2DCKpC,IAAMC,EAAMC,IAAOC,IAAV,KAYHC,EAAUF,YAAOG,IAAPH,CAAH,KAcPI,EAAOJ,YAAOK,IAAPL,CAAH,KAeJM,EAAUN,IAAOO,IAAV,KAUPC,EAASR,IAAOC,IAAV,KAUNQ,EAAaT,YAAOG,IAAPH,CAAH,K,iBCvBRU,EA5BA,WACb,OACE,oCACE,kBAACX,EAAD,KACE,kBAACG,EAAD,CAASS,GAAG,KACV,yBAAKC,IAAKC,IAAMC,IAAI,UAEtB,kBAACV,EAAD,MACA,kBAACE,EAAD,KACE,kBAACJ,EAAD,CAASS,GAAG,SAASI,aAAW,GAAhC,SAMA,kBAACb,EAAD,CAASS,GAAG,WAAWI,aAAW,GAAlC,WAGA,kBAACb,EAAD,CAASS,GAAG,YAAZ,yBAEF,kBAACH,EAAD,KACE,kBAACC,EAAD,CAAYE,GAAG,WAAf,e,6gDClCH,IAAMK,EAAKhB,IAAOiB,GAAV,KAKFC,EAAclB,IAAOO,IAAV,KASXY,EAAgBnB,IAAOoB,KAAV,KAQbC,EAAYrB,IAAOsB,MAAV,KAUTC,EAAavB,IAAOwB,SAAV,KAaVC,EAAezB,IAAO0B,OAAV,KAgBZC,EAAQ3B,IAAO4B,MAAV,KC2DHC,EA7GF,WAAM,MAEkBC,cAA3BC,EAFS,EAETA,SAAUC,EAFD,EAECA,aA6BZC,EAAkB,SAACC,GACvB,IAAIC,EACFD,EAAKE,KAAKC,UAAU,EAAG,GACvBH,EAAKI,MAAMD,UAAU,EAAG,GACxBH,EAAKK,KAAKF,UAAU,EAAG,GAKzB,OAFAF,GAFUK,KAAKC,MAAsB,IAAhBD,KAAKE,SAAiB,GAE/BC,WACZC,QAAQC,IAAI,uBAAyBV,GAC9BA,GAGT,OACE,oCACI,kBAACnB,EAAD,2BACA,kBAACE,EAAD,KACE,kBAACC,EAAD,CAAe2B,SAAUd,GA1ChB,SAACE,GAChB,IAAMa,EAAc,CAClBX,KAAMF,EAAKE,KACXE,MAAOJ,EAAKI,MACZC,KAAML,EAAKK,KACXS,KAAMd,EAAKc,KACXC,YAAaf,EAAKe,YAClBC,SAAUhB,EAAKgB,SACfC,MAAOjB,EAAKiB,MACZhB,KAAMF,EAAgBC,IAGxBU,QAAQC,IAAI,YAAcO,KAAKC,UAAUN,IACzCO,IACGC,KAAK,mCAAoCR,GACzCS,MAAK,SAACC,GAAD,OAASb,QAAQC,IAAIY,EAAIvB,SAEjCwB,MACE,gFACEX,EAAYZ,MAGhBwB,OAAOC,SAASC,aAqBR,kBAAClC,EAAD,CAAOmC,QAAQ,QAAf,QACA,kBAACzC,EAAD,CACE0C,KAAK,OACL3B,KAAK,OACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAACtC,EAAD,CAAOmC,QAAQ,SAAf,UACA,kBAACzC,EAAD,CACE0C,KAAK,OACL3B,KAAK,QACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAACtC,EAAD,CAAOmC,QAAQ,QAAf,QACA,kBAACzC,EAAD,CACE0C,KAAK,OACL3B,KAAK,OACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAACtC,EAAD,CAAOmC,QAAQ,QAAf,QACA,kBAACzC,EAAD,CACE0C,KAAK,OACL3B,KAAK,OACL8B,KAAK,OACLC,IAAI,OACJC,IAAI,QACJJ,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAACtC,EAAD,CAAOmC,QAAQ,eAAf,gBACA,kBAACzC,EAAD,CACE0C,KAAK,MACL3B,KAAK,cACLiC,aAAa,eACbC,QAAQ,6BACRN,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAACtC,EAAD,CAAOmC,QAAQ,YAAf,oBACA,kBAACzC,EAAD,CACE0C,KAAK,OACL3B,KAAK,WACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAACtC,EAAD,CAAOmC,QAAQ,SAAf,SACA,kBAACvC,EAAD,CACEwC,KAAK,QACL3B,KAAK,QACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAACxC,EAAD,CAAcsC,KAAK,UAAnB,c,+mCCjHL,IAAMQ,GAAOvE,IAAOO,IAAV,MAOJiE,GAAgBxE,IAAOO,IAAV,KASbkE,GAAQzE,IAAO0E,GAAV,KAMLC,GAAI3E,IAAO4E,EAAV,KAIDC,GAAQ7E,IAAO8E,IAAV,KCNHC,IDaO/E,IAAO0B,OAAV,KC/BN,WACX,OACE,oCACE,kBAAC6C,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,mBACA,kBAACE,GAAD,gKAKA,kBAAC,EAAD,W,oBCMKK,GAjBD,WACZ,OACE,oCACA,kBAACT,GAAD,KACE,kBAACC,GAAD,KACI,kBAACC,GAAD,iBACA,kBAACI,GAAD,CAAOjE,IAAKqE,OACZ,kBAACN,GAAD,kH,okHCTH,IAAM3D,GAAKhB,IAAOiB,GAAV,MAMFC,GAAclB,IAAOO,IAAV,MAQXY,GAAgBnB,IAAOoB,KAAV,MAQb8D,GAAgBlF,IAAOO,IAAV,MAUb4E,GAAUnF,IAAOO,IAAV,MAoBP6E,GAAOpF,IAAOO,IAAV,MASJoE,GAAI3E,IAAO4E,EAAV,MAIDS,GAAYrF,IAAOO,IAAV,MAKT+E,GAAetF,IAAO0B,OAAV,MAoBZ6D,GAAevF,IAAO0B,OAAV,MAoBZ8D,GAAOxF,IAAOyF,GAAV,MAKJpE,GAAYrB,IAAOsB,MAAV,MAUTC,GAAavB,IAAOwB,SAAV,MAaVC,GAAezB,IAAO0B,OAAV,MAgBZC,GAAQ3B,IAAO4B,MAAV,MCtCH8D,GAzGE,SAACC,GAAW,IAAD,EACS7D,cAA3BC,EADkB,EAClBA,SAAUC,EADQ,EACRA,aAGlBY,QAAQC,IAAI8C,EAAMC,MAClBhD,QAAQC,IAAI,gBAAkB8C,EAAMC,KAAKC,KAkCzC,OACE,oCACE,kBAAC,GAAD,wCACA,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAe/C,SAAUd,GApCd,SAACE,GAEhB,IAAMa,EAAc,CAClBX,KAAMF,EAAKE,KACXE,MAAOJ,EAAKI,MACZC,KAAML,EAAKK,KACXS,KAAMd,EAAKc,KACXC,YAAaf,EAAKe,YAClBC,SAAUhB,EAAKgB,SACfC,MAAOjB,EAAKiB,MACZhB,KAAMwD,EAAMC,KAAKE,SAInBlD,QAAQC,IAAI,YAAcO,KAAKC,UAAUN,IACzCH,QAAQC,IAAI,gCAAkC8C,EAAMC,KAAKC,KAEzDvC,IACGC,KACC,uCAAyCoC,EAAMC,KAAKC,IACpD9C,GAEDS,MAAK,SAACC,GAAD,OAASb,QAAQC,IAAIY,EAAIvB,SAEjCwB,MACE,gFACEX,EAAYZ,MAGhBwB,OAAOC,SAASC,aAQV,kBAAC,GAAD,CAAOC,QAAQ,QAAf,QACA,kBAAC,GAAD,CACEC,KAAK,OACL3B,KAAK,OACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAAC,GAAD,CAAOH,QAAQ,SAAf,UACA,kBAAC,GAAD,CACEC,KAAK,OACL3B,KAAK,QACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAAC,GAAD,CAAOH,QAAQ,QAAf,QACA,kBAAC,GAAD,CACEC,KAAK,OACL3B,KAAK,OACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAAC,GAAD,CAAOH,QAAQ,QAAf,QACA,kBAAC,GAAD,CACEC,KAAK,OACL3B,KAAK,OACL8B,KAAK,OACLC,IAAI,OACJC,IAAI,QACJJ,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAAC,GAAD,CAAOH,QAAQ,eAAf,gBACA,kBAAC,GAAD,CACEC,KAAK,MACL3B,KAAK,cACL2D,MAAM,eACNzB,QAAQ,6BACRN,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAAC,GAAD,CAAOH,QAAQ,YAAf,oBACA,kBAAC,GAAD,CACEC,KAAK,OACL3B,KAAK,WACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAAC,GAAD,CAAOH,QAAQ,SAAf,SACA,kBAAC,GAAD,CACEC,KAAK,QACL3B,KAAK,QACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAAC,GAAD,CAAcF,KAAK,UAAnB,cCFKiC,OA9Ff,SAAqBL,GACnB/C,QAAQC,IAAI,gCACZD,QAAQC,IAAI8C,EAAMC,MAElB,IAAMK,EAAoB,WACxB,IAAMC,EAAKP,EAAMC,KAAKC,IACtBjD,QAAQC,IAAI,iCACZD,QAAQC,IAAIqD,IAEqD,IAA9DvC,OAAOwC,QAAQ,4CAChB7C,IACG8C,OAAO,gCAAkCF,GACzC1C,MAAK,SAACC,GAAD,OAASb,QAAQC,IAAIY,EAAIvB,SAC/ByB,OAAOC,SAASC,UAElBjB,QAAQC,IAAI,8BAKVwD,EAAoB,WACxBzD,QAAQC,IAAI,+BACZD,QAAQC,IAAI8C,EAAMC,OAE+C,IAA9DjC,OAAOwC,QAAQ,4CAChBvD,QAAQC,IAAI,+BAGZyD,IAASC,OAAO,kBAACC,GAAD,CAAYZ,KAAMD,EAAMC,OAASa,SAASC,eAAe,eAEzE9D,QAAQC,IAAI,8BA6DhB,OAAO,oCAAE,yBAAKqD,GAAG,cAAkB,6BAxDP,WAC1B,IAAI3D,EAAOoE,KAAKhB,EAAMC,KAAKrD,MAG3B,OAFAK,QAAQC,IAAIN,GAES,IAAjBoD,EAAMiB,OAEN,6BACE,kBAACzB,GAAD,KACE,kBAACC,GAAD,KACE,kBAACI,GAAD,KACE,4BACE,qCACCG,EAAMC,KAAKxD,MAEd,4BACE,uCACCuD,EAAMC,KAAKtD,OAEd,4BACE,qCACC,IAAIqE,KAAKhB,EAAMC,KAAKrD,MAAMsE,gBAE7B,4BACE,qCACClB,EAAMC,KAAK5C,MAEd,4BACE,wCACC2C,EAAMC,KAAK3C,aAEd,4BACE,iDACC0C,EAAMC,KAAK1C,UAEd,4BACE,sCACCyC,EAAMC,KAAKzC,SAIlB,kBAACkC,GAAD,KACE,kBAACC,GAAD,CAAcwB,QAASb,GACrB,kBAAC,IAAD,OAEF,kBAACV,GAAD,CAAcuB,QAAST,GACrB,kBAAC,IAAD,UAOH,kBAAC,GAAD,+CAI8BU,MCpG5B,SAASC,KAAmB,IAAD,EACAC,mBAAS,IADT,mBACjCC,EADiC,KACnBC,EADmB,KAoBxC,OAhBAC,qBAAU,WAER,sBAAC,4BAAAC,EAAA,sEACsB/D,IAAMgE,IAAI,iCADhC,OACOC,EADP,OAECJ,EAAgBI,EAAOrF,MAFxB,0CAAD,KAIC,IAGHkF,qBAAU,WACRxE,QAAQC,IAAI,yBACZD,QAAQC,IAAIqE,KACX,CAACA,IAKF,yBAAKhB,GAAG,eACR,kBAAChB,GAAD,KACGgC,EAAaM,KAAI,SAAAH,GAAC,OAAI,kBAAC,GAAD,CAAazB,KAAMyB,SCzBhD,IAceI,GAdA,WACb,OACE,6BACE,kBAAClD,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,gCACA,kBAACE,GAAD,8DACA,kBAACqC,GAAD,UCwDKU,OAvDf,WAAwB,IAAD,EACa5F,cAA1BC,EADa,EACbA,SAAUC,EADG,EACHA,aAsBlB,OACE,oCACE,kBAACd,EAAD,KACE,kBAACC,EAAD,CAAe2B,SAAUd,GAvBd,SAACE,GAChBU,QAAQC,IAAIX,GAEZ,IAAMyF,EAAQ,CACZvF,KAAMF,EAAKE,KACXE,MAAOJ,EAAKI,MACZa,MAAOjB,EAAKiB,OAGdG,IACGC,KAAK,oCAAqCoE,GAC1CnE,MAAK,SAACC,GAAD,OAASb,QAAQC,IAAIY,EAAIvB,SAEjCwB,MACE,uCAGAC,OAAOC,SAASC,aAOZ,kBAAClC,EAAD,CAAOmC,QAAQ,QAAf,QACA,kBAACzC,EAAD,CACE0C,KAAK,OACL3B,KAAK,OACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAACtC,EAAD,CAAOmC,QAAQ,SAAf,UACA,kBAACzC,EAAD,CACE0C,KAAK,OACL3B,KAAK,QACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAACtC,EAAD,CAAOmC,QAAQ,SAAf,SACA,kBAACvC,EAAD,CACEwC,KAAK,QACL3B,KAAK,QACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAACxC,EAAD,CAAcsC,KAAK,UAAnB,cC1CK6D,GAdC,WACZ,OACI,oCACA,kBAACrD,GAAD,KACI,kBAACC,GAAD,KACQ,kBAACC,GAAD,4BACA,kBAACE,GAAD,qEACA,kBAAC,GAAD,UCqDLkD,GAnDA,WAAO,IAAD,EACgB/F,cAA3BC,EADW,EACXA,SAAUC,EADC,EACDA,aAEZc,EAAQ,uCAAG,WAAOZ,GAAP,iBAAAmF,EAAA,6DAETS,EAAO,CACXC,SAAU7F,EAAK6F,SACfC,SAAU9F,EAAK8F,UAGbC,EAAQ,GAPG,SAST3E,IACHC,KAAK,qCAAsCuE,GAC3CtE,MAAK,SAACC,GACLb,QAAQC,IAAIY,EAAIvB,MAChB+F,EAAQxE,EAAIvB,KAAK+F,SAbN,OAgBbrF,QAAQC,IAAI,cAAgBoF,GAC5BC,aAAaC,QAAQ,aAAcF,GACrCtE,OAAOC,SAAW,gCAlBH,2CAAH,sDAqBd,OACE,kBAACW,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,uCACA,kBAACzD,EAAD,uBACA,kBAACE,EAAD,KACE,kBAACC,EAAD,CAAe2B,SAAUd,EAAac,IACpC,kBAACnB,EAAD,CAAOmC,QAAQ,QAAf,YACA,kBAACzC,EAAD,CACE0C,KAAK,OACL3B,KAAK,WACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAE5B,kBAACtC,EAAD,CAAOmC,QAAQ,QAAf,YACA,kBAACzC,EAAD,CACE0C,KAAK,WACL3B,KAAK,WACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAE5B,kBAACxC,EAAD,CAAcsC,KAAK,UAAnB,cC4IGqE,GA1KC,WAAO,IAAD,EACetG,cAA3BC,EADY,EACZA,SAAUC,EADE,EACFA,aAElB,SAASqG,EAASC,GAChB,IAAIC,EAAI,EACR,IAAK,IAAIC,KAAOF,EACVA,EAAIG,eAAeD,MAAQD,EAEjC,OAAOA,EAGT,IAAMG,EAAS,uCAAG,4BAAArB,EAAA,sEACK/D,IAAMgE,IAAI,iCADf,cACZqB,EADY,OAEhB/F,QAAQC,IAAI8F,EAASzG,MAFL,kBAGTyG,EAASzG,MAHA,2CAAH,qDAMT+D,EAAoB,SAAC2C,GACzB,IAAM1C,EAAK0C,EAAO/C,IAClBjD,QAAQC,IAAI,iCACZD,QAAQC,IAAIqD,IAEsD,IAA9DvC,OAAOwC,QAAQ,4CACjB7C,IACG8C,OAAO,gCAAkCF,GACzC1C,MAAK,SAACC,GAAD,OAASb,QAAQC,IAAIY,EAAIvB,SACjCyB,OAAOC,SAASC,UAEhBjB,QAAQC,IAAI,uCAKVwD,EAAoB,SAACuC,GACzBhG,QAAQC,IAAI,+BACZD,QAAQC,IAAI+F,IAEsD,IAA9DjF,OAAOwC,QAAQ,4CACjBvD,QAAQC,IAAI,+BAGZyD,IAASC,OACP,kBAAC,GAAD,CAAUX,KAAMgD,IAChBnC,SAASC,eAAe,eAG1B9D,QAAQC,IAAI,uCAIVC,EAAQ,uCAAG,WAAOZ,GAAP,uBAAAmF,EAAA,6DACfzE,QAAQC,IAAI,cACZD,QAAQC,IAAIX,EAAK4D,SACX+C,EAAO,CAAE1G,KAAMD,EAAK4D,QAAS1D,KAAMF,EAAKE,MAC1CwG,OAASE,EACblG,QAAQC,IAAIgG,GALG,SAOYH,IAPZ,OAOTxB,EAPS,OAQftE,QAAQC,IAAI,wBACZD,QAAQC,IAAIqE,GAER6B,EAAWV,EAASnB,GACxBtE,QAAQC,IAAI,wBAA0BkG,GAE7BC,EAAI,EAdE,aAcCA,EAAI9B,EAAaN,QAdlB,oBAebhE,QAAQC,IAAIqE,EAAa8B,GAAG5G,MAC5BQ,QAAQC,IAAIqE,EAAa8B,GAAGlD,SAE1BoB,EAAa8B,GAAG5G,OAASF,EAAKE,MAC9B8E,EAAa8B,GAAGlD,UAAY5D,EAAK4D,QAnBtB,wBAqBX8C,EAAS1B,EAAa8B,GArBX,6BAc0BA,IAd1B,wBA0BfpG,QAAQC,IAAI,YACZD,QAAQC,IAAI+F,QAIGE,IAAXF,EACFtC,IAASC,OACP,6BACE,kBAACrB,GAAD,KACE,kBAACP,GAAD,mEACA,kBAACQ,GAAD,KACE,kBAACC,GAAD,KACE,kBAACI,GAAD,KACE,4BACE,qCACCoD,EAAOxG,MAEV,4BACE,uCACCwG,EAAOtG,OAEV,4BACE,qCACC,IAAIqE,KAAKiC,EAAOrG,MAAMsE,gBAEzB,4BACE,qCACC+B,EAAO5F,MAEV,4BACE,uCACC4F,EAAO3F,aAEV,4BACE,iDACC2F,EAAO1F,UAEV,4BACE,sCACC0F,EAAOzF,SAId,kBAACkC,GAAD,KACE,kBAACE,GAAD,CAAcuB,QAAS,kBAAMT,EAAkBuC,KAC7C,kBAAC,IAAD,OAEF,kBAACtD,GAAD,CAAcwB,QAAS,kBAAMb,EAAkB2C,KAC7C,kBAAC,IAAD,WAMVnC,SAASC,eAAe,WAG1BJ,IAASC,OACP,kBAAC5B,GAAD,4DACA8B,SAASC,eAAe,WArFb,4CAAH,sDA0Fd,OACE,kBAACnC,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,6BACA,kBAACzD,EAAD,+BACA,kBAACE,EAAD,KACE,kBAACC,EAAD,CAAe2B,SAAUd,EAAac,IACpC,kBAACnB,EAAD,CAAOmC,QAAQ,QAAf,QACA,kBAACzC,EAAD,CACE0C,KAAK,OACL3B,KAAK,OACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAG5B,kBAACtC,EAAD,CAAOmC,QAAQ,WAAf,QACA,kBAACzC,EAAD,CACE0C,KAAK,OACL3B,KAAK,UACL4B,IAAKjC,EAAS,CAAEkC,UAAU,MAE5B,kBAACxC,EAAD,oBAGJ,yBAAKyE,GAAG,cACR,yBAAKA,GAAG,cC1LD+C,2BAAc,MC6EdC,OAjEf,WAAgB,IAAD,EACmBjC,mBAAS,CACvCgB,WAAOa,EACPhB,UAAMgB,IAHK,mBACNK,EADM,KACIC,EADJ,KAyCb,OAlCAhC,qBAAU,YACW,uCAAG,gCAAAC,EAAA,6DAKN,QAJVY,EAAQC,aAAamB,QAAQ,iBAK/BnB,aAAaC,QAAQ,aAAc,IACnCF,EAAQ,IAPU,SASG3E,IAAMC,KAC3B,4CACA,KACA,CAAE+F,QAAS,CAAE,eAAgBrB,KAZX,YASdsB,EATc,QAcPrH,KAdO,iCAgBIoB,IAAMgE,IAC1B,wCACA,CACEgC,QAAS,CAAE,eAAgBrB,KAnBb,OAgBZuB,EAhBY,OAsBlBJ,EAAY,CACVnB,QACAH,KAAM0B,EAAQtH,OAxBE,QA2BpBU,QAAQC,IAAI,4BAA8B0G,EAASrH,MA3B/B,4CAAH,qDA8BnBuH,KACC,IAGD,yBAAKC,UAAU,YACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,KACE,kBAACC,GAAYC,SAAb,CAAsB7D,MAAO,CAAEoD,WAAUC,gBACvC,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOS,KAAK,IAAIC,OAAK,EAACC,UAAWhF,KACjC,kBAAC,IAAD,CAAO8E,KAAK,SAASE,UAAW/E,KAChC,kBAAC,IAAD,CAAO6E,KAAK,UAAUC,OAAK,EAACC,UAAWtC,KACvC,kBAAC,IAAD,CAAOoC,KAAK,WAAWC,OAAK,EAACC,UAAWnC,KACxC,kBAAC,IAAD,CAAOiC,KAAK,UAAUC,OAAK,EAACC,UAAWlC,KACvC,kBAAC,IAAD,CAAOgC,KAAK,WAAWC,OAAK,EAACC,UAAW3B,WCzDlC4B,QACW,cAA7BrG,OAAOC,SAASqG,UAEe,UAA7BtG,OAAOC,SAASqG,UAEhBtG,OAAOC,SAASqG,SAASC,MACvB,2DCXN5D,IAASC,OACP,kBAAC,IAAM4D,WAAP,KACE,kBAAC,GAAD,OAEF1D,SAASC,eAAe,SDwHpB,kBAAmB0D,WACrBA,UAAUC,cAAcC,MACrB9G,MAAK,SAAA+G,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9H,QAAQ8H,MAAMA,EAAMC,c","file":"static/js/main.77242c8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.47bc71e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/aboutmepic.5e49787e.jpg\";","import styled from \"styled-components\";\r\nimport { NavLink as Link } from \"react-router-dom\";\r\nimport { FaBars} from \"react-icons/fa\";\r\n\r\n// Style our component and export it.\r\nexport const Nav = styled.nav`\r\n  background: #000;\r\n  height: 80px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: space-between;\r\n  padding: 0.5rem calc((100vx - 1000px) / 2);\r\n  z-index: 10;\r\n  position: sticky;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  height: 100%;\r\n  cursor: pointer;\r\n\r\n  &.active {\r\n    color: #15cdfc;\r\n  }\r\n`;\r\n\r\nexport const Bars = styled(FaBars)`\r\n  display: none;\r\n  color: #fff;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    transform: translate(-100%, 75%);\r\n    font-size: 1.8rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtn = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 20px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const NavBtnLink = styled(Link)`\r\n  border-radius: 4px;\r\n  background: #256ce1;\r\n  padding: 10px 22px;\r\n  color: #fff;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    background: #fff;\r\n    color: #010606;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Nav,\r\n  NavLink,\r\n  Bars,\r\n  NavMenu,\r\n  NavBtn,\r\n  NavBtnLink,\r\n} from \"./NavbarElements\";\r\nimport logo from \"../../images/logo2.svg\";\r\n// import { FaBars } from \"react-icons/fa\";\r\n\r\n// TODO: Follow the tutorial below to implement the hamburger menu.\r\n// https://www.youtube.com/watch?v=fL8cFqhTHwA&t=185s&ab_channel=BrianDesign/\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <NavLink to=\"/\">\r\n          <img src={logo} alt=\"Logo\" />\r\n        </NavLink>\r\n        <Bars />\r\n        <NavMenu>\r\n          <NavLink to=\"/about\" activeStyle>\r\n            About\r\n          </NavLink>\r\n          {/* <NavLink to=\"/editor\" activeStyle>\r\n            Edit Appointment\r\n          </NavLink> */}\r\n          <NavLink to=\"/contact\" activeStyle>\r\n            Contact\r\n          </NavLink>\r\n          <NavLink to=\"/retcode\">Enter Retrieval Code</NavLink>\r\n        </NavMenu>\r\n        <NavBtn>\r\n          <NavBtnLink to=\"/signin\">Sign In</NavBtnLink>\r\n        </NavBtn>\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const H2 = styled.h2`\r\n  font-size: 1.5rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n  width: 50%;\r\n  flex-direction: column;\r\n  background-color: rgba(0,0,0,.5);\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const FormContainer = styled.form`\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n`;\r\n\r\nexport const TextFeild = styled.input`\r\n  width: 75%;\r\n  font-size: 1rem;\r\n  padding: 10px 20px;\r\n  margin: 10px 5px 25px 5px;\r\n  border: 5px black;\r\n  border-color: black;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const NotesFeild = styled.textarea`\r\n  resize: none;\r\n  box-sizing: border-box;\r\n  width: 75%;\r\n  height: 200px;\r\n  font-size: 1rem;\r\n  padding: 10px 20px;\r\n  margin: 10px;\r\n  border: 5px black;\r\n  border-color: black;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-size: 1.3rem;\r\n  border: 50px;\r\n  border-color: black;\r\n  border-radius: 5px;\r\n  margin: 10px 5px;\r\n  padding: 7px 10px;\r\n  width: 25%;\r\n  background: #0266f2;\r\n  color: white;\r\n  &:hover {\r\n    background: #0244a1;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  margin: 5px 3px 0px 3px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  display: block;\r\n  float: left;\r\n`;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport {\r\n  FormWrapper,\r\n  FormContainer,\r\n  NotesFeild,\r\n  SubmitButton,\r\n  TextFeild,\r\n  H2,\r\n  Label,\r\n} from \"./FormElements\";\r\n\r\nconst Form = () => {\r\n  // Note: can add 'errors' to this object\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  // Add form input to the database.\r\n  const onSubmit = (data) => {\r\n    const appointment = {\r\n      name: data.name,\r\n      email: data.email,\r\n      date: data.date,\r\n      time: data.time,\r\n      phoneNumber: data.phoneNumber,\r\n      apptType: data.apptType,\r\n      notes: data.notes,\r\n      code: generateRetCode(data),\r\n    };\r\n\r\n    console.log(\"Posting: \" + JSON.stringify(appointment));\r\n    axios\r\n      .post(\"http://localhost:5000/editor/add\", appointment)\r\n      .then((res) => console.log(res.data)); // promise\r\n\r\n    alert(\r\n      \"IMPORTANT: Write down your retrieval code in case you want to make changes!\\n\" +\r\n        appointment.code\r\n    );\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  // Generates a retreival code and writes it to the code log.\r\n  const generateRetCode = (data) => {\r\n    var code =\r\n      data.name.substring(0, 1) +\r\n      data.email.substring(0, 4) +\r\n      data.date.substring(5, 9);\r\n    var num = Math.floor(Math.random() * 100 + 1);\r\n\r\n    code += num.toString();\r\n    console.log(\"Ret Code Generated: \" + code);\r\n    return code;\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <H2>Set an Appointment</H2>\r\n        <FormWrapper>\r\n          <FormContainer onSubmit={handleSubmit(onSubmit)}>\r\n            <Label htmlFor=\"name\">Name</Label>\r\n            <TextFeild\r\n              type=\"text\"\r\n              name=\"name\"\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            <Label htmlFor=\"email\">E-mail</Label>\r\n            <TextFeild\r\n              type=\"text\"\r\n              name=\"email\"\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            <Label htmlFor=\"date\">Date</Label>\r\n            <TextFeild\r\n              type=\"date\"\r\n              name=\"date\"\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            <Label htmlFor=\"time\">Time</Label>\r\n            <TextFeild\r\n              type=\"time\"\r\n              name=\"time\"\r\n              step=\"3600\"\r\n              min=\"9:00\"\r\n              max=\"18:00\"\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            <Label htmlFor=\"phoneNumber\">Phone Number</Label>\r\n            <TextFeild\r\n              type=\"tel\"\r\n              name=\"phoneNumber\"\r\n              defaultValue=\"000-000-0000\"\r\n              pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            <Label htmlFor=\"apptType\">Appointment Type</Label>\r\n            <TextFeild\r\n              type=\"text\"\r\n              name=\"apptType\"\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            <Label htmlFor=\"notes\">Notes</Label>\r\n            <NotesFeild\r\n              type=\"input\"\r\n              name=\"notes\"\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n          </FormContainer>\r\n        </FormWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled from 'styled-components';\r\n\r\nexport const Page = styled.div`\r\n    /* height: 100%; */\r\n    color: white;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const PageContainer = styled.div`\r\n    /* margin: 0px 75px; */\r\n    background-color: #0c0a09;\r\n    display: flex;\r\n    flex-direction: column; \r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    flex-direction: 'column';\r\n    padding: '10px';\r\n    margin: 30px 5px 20px 5px;\r\n`;\r\n\r\nexport const P = styled.p`\r\n    margin: 30px 40px;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  /* width: 50%; */\r\n  max-width: 300px;\r\n  max-height: 50%;\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-size: 1.3rem;\r\n  border: 50px;\r\n  border-color: black;\r\n  border-radius: 5px;\r\n  padding: 7px 10px;\r\n  width: 25%;\r\n  background: #0266f2;\r\n  color: white;\r\n  &:hover {\r\n    background: #0244a1;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Form from \"../components/Form\";\r\nimport { P, Page, PageContainer, Title } from \"./PageComponents.js\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Page>\r\n        <PageContainer>\r\n          <Title>Hi, there!</Title>\r\n          <P>\r\n            Welcome to Registart! I am so glad you are here! Please use the\r\n            following form to set an appointment with me. I am looking forward\r\n            to getting in touch!\r\n          </P>\r\n          <Form />\r\n        </PageContainer>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { P, Page, PageContainer, Title, Image } from \"./PageComponents.js\";\r\nimport picture from \"../images/aboutmepic.jpg\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n    <Page>\r\n      <PageContainer>\r\n          <Title>About Me</Title>\r\n          <Image src={picture} />\r\n          <P>\r\n            Ashley is a student at the University of Florida. She enjoys\r\n            writing, reading, art, and writing code!\r\n          </P>\r\n      </PageContainer>\r\n    </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import styled from \"styled-components\";\r\n\r\nexport const H2 = styled.h2`\r\n  font-size: 1.5rem;\r\n  color: white;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n  flex: 1;\r\n  flex-direction: \"column\";\r\n  padding: \"10%\";\r\n  /* background-color: #adcfff; */\r\n  padding: 10px;\r\n`;\r\n\r\nexport const FormContainer = styled.form`\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n`;\r\n\r\nexport const ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 10px;\r\n  background-color: rgba(0,0,0,.5);\r\n  margin: 10px;\r\n`;\r\n\r\nexport const CardDiv = styled.div`\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #0244a1;\r\n  width: 70%;\r\n  padding: 15px 60px;\r\n  margin: 20px 100px;\r\n  border-radius: 5px;\r\n  transition: all 0.2s ease-in-out;\r\n\r\n  &:hover {\r\n    background-color: #0266f2;\r\n    transition: all 0.2s ease-in-out;\r\n  }\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  padding: 10px;\r\n  margin: 10px;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-size: 1.2rem;\r\n  word-wrap: normal;\r\n  /* width: 50%; */\r\n`;\r\n\r\nexport const P = styled.p`\r\n  color: white;\r\n`;\r\n\r\nexport const ButtonDiv = styled.div`\r\n  align-items: end;\r\n  /* padding: 5px; */\r\n`;\r\n\r\nexport const DeleteButton = styled.button`\r\n  display: flex;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  width: 100%;\r\n  height: 30%;\r\n  /* position: relative; */\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-size: 1.8rem;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: red;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const AcceptButton = styled.button`\r\n  display: flex;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  width: 100%;\r\n  height: 30%;\r\n  /* position: relative; */\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: green;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: none;\r\n`\r\n\r\n\r\nexport const TextFeild = styled.input`\r\n  width: 75%;\r\n  font-size: 1rem;\r\n  padding: 10px 20px;\r\n  margin: 10px 5px 25px 5px;\r\n  border: 5px black;\r\n  border-color: black;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const NotesFeild = styled.textarea`\r\n  resize: none;\r\n  box-sizing: border-box;\r\n  width: 75%;\r\n  height: 200px;\r\n  font-size: 1rem;\r\n  padding: 10px 20px;\r\n  margin: 10px;\r\n  border: 5px black;\r\n  border-color: black;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-size: 1.3rem;\r\n  border: 50px;\r\n  border-color: black;\r\n  border-radius: 5px;\r\n  margin: 10px 5px;\r\n  padding: 7px 10px;\r\n  width: 25%;\r\n  background: #0266f2;\r\n  color: white;\r\n  &:hover {\r\n    background: #0244a1;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  margin: 5px 3px 0px 3px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  display: block;\r\n  float: left;\r\n`;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport {\r\n  FormWrapper,\r\n  FormContainer,\r\n  NotesFeild,\r\n  SubmitButton,\r\n  TextFeild,\r\n  H2,\r\n  Label,\r\n} from \"./EditorElements\";\r\n\r\nconst EditForm = (props) => {\r\n  const { register, handleSubmit } = useForm();\r\n  // Props takes in the id of the previous appointment.\r\n\r\n  console.log(props.appt);\r\n  console.log(\"id recieved! \" + props.appt._id);\r\n  // Add form input to the database.\r\n  const onSubmit = (data) => {\r\n    // Take new appointment data and prepare it to be sent to the DB.\r\n    const appointment = {\r\n      name: data.name,\r\n      email: data.email,\r\n      date: data.date,\r\n      time: data.time,\r\n      phoneNumber: data.phoneNumber,\r\n      apptType: data.apptType,\r\n      notes: data.notes,\r\n      code: props.appt.retCode,\r\n    };\r\n\r\n    // Update entry in the database.\r\n    console.log(\"Posting: \" + JSON.stringify(appointment));\r\n    console.log(\"http://localhost:5000/update/\" + props.appt._id);\r\n\r\n    axios\r\n      .post(\r\n        \"http://localhost:5000/editor/update/\" + props.appt._id,\r\n        appointment\r\n      )\r\n      .then((res) => console.log(res.data));\r\n\r\n    alert(\r\n      \"IMPORTANT: Write down your retrieval code in case you want to make changes!\\n\" +\r\n        appointment.code\r\n    );\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <H2>Enter Your Updated Information!</H2>\r\n      <FormWrapper>\r\n        <FormContainer onSubmit={handleSubmit(onSubmit)}>\r\n          <Label htmlFor=\"name\">Name</Label>\r\n          <TextFeild\r\n            type=\"text\"\r\n            name=\"name\"\r\n            ref={register({ required: true })}\r\n          />\r\n\r\n          <Label htmlFor=\"email\">E-mail</Label>\r\n          <TextFeild\r\n            type=\"text\"\r\n            name=\"email\"\r\n            ref={register({ required: true })}\r\n          />\r\n\r\n          <Label htmlFor=\"date\">Date</Label>\r\n          <TextFeild\r\n            type=\"date\"\r\n            name=\"date\"\r\n            ref={register({ required: true })}\r\n          />\r\n\r\n          <Label htmlFor=\"time\">Time</Label>\r\n          <TextFeild\r\n            type=\"time\"\r\n            name=\"time\"\r\n            step=\"3600\"\r\n            min=\"9:00\"\r\n            max=\"18:00\"\r\n            ref={register({ required: true })}\r\n          />\r\n\r\n          <Label htmlFor=\"phoneNumber\">Phone Number</Label>\r\n          <TextFeild\r\n            type=\"tel\"\r\n            name=\"phoneNumber\"\r\n            value=\"###-###-####\"\r\n            pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n            ref={register({ required: true })}\r\n          />\r\n\r\n          <Label htmlFor=\"apptType\">Appointment Type</Label>\r\n          <TextFeild\r\n            type=\"text\"\r\n            name=\"apptType\"\r\n            ref={register({ required: true })}\r\n          />\r\n\r\n          <Label htmlFor=\"notes\">Notes</Label>\r\n          <NotesFeild\r\n            type=\"input\"\r\n            name=\"notes\"\r\n            ref={register({ required: true })}\r\n          />\r\n\r\n          <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n        </FormContainer>\r\n      </FormWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  CardDiv,\r\n  Info,\r\n  P,\r\n  ButtonDiv,\r\n  DeleteButton,\r\n  AcceptButton,\r\n  List,\r\n} from \"./EditorElements\";\r\nimport { FaTimes, FaPen } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport EditorForm from \"./EditorForm\";\r\n\r\nfunction Appointment(props) {\r\n  console.log(\"Appointment module recieved:\");\r\n  console.log(props.appt);\r\n\r\n  const deleteAppointment = () => {\r\n    const id = props.appt._id;\r\n    console.log(\"Delete appointment recieved: \");\r\n    console.log(id);\r\n\r\n    if(window.confirm(\"Do you want to delete this appointment?\") === true){\r\n      axios\r\n        .delete(\"http://localhost:5000/editor/\" + id)\r\n        .then((res) => console.log(res.data));\r\n        window.location.reload();\r\n    } else {\r\n      console.log(\"Opted out of page reload.\");\r\n    }\r\n  };\r\n\r\n  // Idea: Render in a form that will take in new data and change what is present on the screen.\r\n  const updateAppointment = () => {\r\n    console.log(\"updateAppointment received:\");\r\n    console.log(props.appt);\r\n\r\n    if(window.confirm(\"Do you want to update this appointment?\") === true){\r\n      console.log(\"Updating appointment entry!\");\r\n\r\n      // Pass the entire appointment to the editor form.\r\n      ReactDOM.render(<EditorForm appt={props.appt}/>, document.getElementById(\"formSpace\"));\r\n    } else {\r\n      console.log(\"Opted out of page reload.\");\r\n    }\r\n\r\n  };\r\n\r\n  const displayAppointments = () => {\r\n    let date = Date(props.appt.date);\r\n    console.log(date);\r\n\r\n    if (props.length !== 0) {\r\n      return (\r\n        <div>\r\n          <CardDiv>\r\n            <Info>\r\n              <List>\r\n                <li>\r\n                  <b>Name: </b>\r\n                  {props.appt.name}\r\n                </li>\r\n                <li>\r\n                  <b>E-mail: </b>\r\n                  {props.appt.email}\r\n                </li>\r\n                <li>\r\n                  <b>Date: </b>\r\n                  {new Date(props.appt.date).toDateString()}\r\n                </li>\r\n                <li>\r\n                  <b>Time: </b>\r\n                  {props.appt.time}\r\n                </li>\r\n                <li>\r\n                  <b>Phone #: </b>\r\n                  {props.appt.phoneNumber}\r\n                </li>\r\n                <li>\r\n                  <b>Appointment Type: </b>\r\n                  {props.appt.apptType}\r\n                </li>\r\n                <li>\r\n                  <b>Notes: </b>\r\n                  {props.appt.notes}\r\n                </li>\r\n              </List>\r\n            </Info>\r\n            <ButtonDiv>\r\n              <DeleteButton onClick={deleteAppointment}>\r\n                <FaTimes />\r\n              </DeleteButton>\r\n              <AcceptButton onClick={updateAppointment}>\r\n                <FaPen />\r\n              </AcceptButton>\r\n            </ButtonDiv>\r\n          </CardDiv>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <P>Whoops! No appointments scheduled yet.</P>;\r\n    }\r\n  };\r\n\r\n  return <><div id=\"formSpace\"></div><div>{displayAppointments()}</div></>;\r\n}\r\n\r\nexport default Appointment;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ListContainer } from \"./EditorElements\";\r\nimport axios from \"axios\";\r\nimport Appointment from \"./Appointment\";\r\n\r\n// Appointments reside here: http://localhost: 5000/editor/\r\nexport default function AppointmentList() {\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  // Upon render, fetch appointment data from API and store it in an array\r\n  useEffect(() => {\r\n    // The following is an immeidately invoked function call.\r\n    (async () => {\r\n      const result = await axios.get(\"http://localhost:5000/editor/\");\r\n      setAppointments(result.data);\r\n    })();\r\n  }, []);\r\n\r\n  // I tried adding this just to make sure that my hook was updating.\r\n  useEffect(() => {\r\n    console.log(\"Appointments updated!\");\r\n    console.log(appointments);\r\n  }, [appointments]);\r\n\r\n  // I want to pass my appointment data into a compoinent so I can render \r\n  // it to the screen.\r\n  return (\r\n    <div id=\"listwrapper\">\r\n    <ListContainer>\r\n      {appointments.map(a => <Appointment appt={a}/>)}\r\n    </ListContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport AppointmentList from \"../components/Editor/index.js\";\r\nimport { Page, PageContainer, Title, P } from \"./PageComponents.js\";\r\n\r\nconst Editor = () => {\r\n  return (\r\n    <div>\r\n      <Page>\r\n        <PageContainer>\r\n          <Title>Appointment Editor Tool</Title>\r\n          <P>Here are the appointments clients have made with you.</P>\r\n          <AppointmentList />\r\n        </PageContainer>\r\n      </Page>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport {\r\n  FormWrapper,\r\n  FormContainer,\r\n  NotesFeild,\r\n  SubmitButton,\r\n  TextFeild,\r\n  Label,\r\n} from \"./FormElements\";\r\n\r\nfunction ContactForm() {\r\n  const { register, handleSubmit} = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n\r\n    const cinfo = {\r\n      name: data.name,\r\n      email: data.email,\r\n      notes: data.notes,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/contact/add\", cinfo)\r\n      .then((res) => console.log(res.data)); // promise\r\n\r\n    alert(\r\n      \"Your information has been recieved!\"\r\n    );\r\n\r\n      window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormWrapper>\r\n        <FormContainer onSubmit={handleSubmit(onSubmit)}>\r\n          <Label htmlFor=\"name\">Name</Label>\r\n          <TextFeild\r\n            type=\"text\"\r\n            name=\"name\"\r\n            ref={register({ required: true })}\r\n          />\r\n\r\n          <Label htmlFor=\"email\">E-mail</Label>\r\n          <TextFeild\r\n            type=\"text\"\r\n            name=\"email\"\r\n            ref={register({ required: true })}\r\n          />\r\n\r\n          <Label htmlFor=\"notes\">Notes</Label>\r\n          <NotesFeild\r\n            type=\"input\"\r\n            name=\"notes\"\r\n            ref={register({ required: true })}\r\n          />\r\n\r\n          <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n        </FormContainer>\r\n      </FormWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react'\r\nimport ContactForm from '../components/Form/ContactForm.js'\r\nimport {P, Page, PageContainer, Title} from './PageComponents.js'\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <>\r\n        <Page>\r\n            <PageContainer>\r\n                    <Title>Let's get in touch!</Title>\r\n                    <P>Questions? Concerns? Use the form below to send them my way!</P>\r\n                    <ContactForm />\r\n            </PageContainer>\r\n        </Page>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React from \"react\";\r\nimport { Page, PageContainer, Title } from \"./PageComponents.js\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport {\r\n  FormWrapper,\r\n  FormContainer,\r\n  SubmitButton,\r\n  TextFeild,\r\n  H2,\r\n  Label,\r\n} from \"../components/Form/FormElements\";\r\n\r\nconst SignIn = () => {\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n\r\n    const user = {\r\n      username: data.username,\r\n      password: data.password,\r\n    };\r\n\r\n    let token = \"\";\r\n\r\n    await axios\r\n      .post(\"http://localhost:5000/signin/login\", user)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        token = res.data.token;\r\n      }); // promise\r\n\r\n      console.log(\"Got token: \" + token);\r\n      localStorage.setItem(\"auth-token\", token);\r\n    window.location = \"http://localhost:3000/editor/\"\r\n    };\r\n\r\n  return (\r\n    <Page>\r\n      <PageContainer>\r\n        <Title>Are you the site administator?</Title>\r\n        <H2>If so, log in!</H2>\r\n        <FormWrapper>\r\n          <FormContainer onSubmit={handleSubmit(onSubmit)}>\r\n            <Label htmlFor=\"date\">Username</Label>\r\n            <TextFeild\r\n              type=\"text\"\r\n              name=\"username\"\r\n              ref={register({ required: true })}\r\n            />\r\n            <Label htmlFor=\"date\">Password</Label>\r\n            <TextFeild\r\n              type=\"password\"\r\n              name=\"password\"\r\n              ref={register({ required: true })}\r\n            />\r\n            <SubmitButton type=\"submit\">Login</SubmitButton>\r\n          </FormContainer>\r\n        </FormWrapper>\r\n      </PageContainer>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { Page, PageContainer, P, Title } from \"./PageComponents.js\";\r\nimport {\r\n  TextFeild,\r\n  H2,\r\n  Label,\r\n  FormWrapper,\r\n  FormContainer,\r\n  SubmitButton,\r\n} from \"../components/Form/FormElements\";\r\nimport {\r\n  CardDiv,\r\n  Info,\r\n  ButtonDiv,\r\n  DeleteButton,\r\n  AcceptButton,\r\n  List,\r\n  ListContainer,\r\n} from \"../components/Editor/EditorElements\";\r\nimport \"../components/Editor/Appointment\";\r\nimport { FaTimes, FaPen } from \"react-icons/fa\";\r\nimport EditForm from \"../components/Editor/EditorForm\";\r\n\r\nconst RetCode = () => {\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  function numProps(obj) {\r\n    var c = 0;\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) ++c;\r\n    }\r\n    return c;\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    let response = await axios.get(\"http://localhost:5000/editor/\");\r\n    console.log(response.data);\r\n    return response.data;\r\n  };\r\n\r\n  const deleteAppointment = (target) => {\r\n    const id = target._id;\r\n    console.log(\"Delete appointment recieved: \");\r\n    console.log(id);\r\n\r\n    if (window.confirm(\"Do you want to delete this appointment?\") === true) {\r\n      axios\r\n        .delete(\"http://localhost:5000/editor/\" + id)\r\n        .then((res) => console.log(res.data));\r\n      window.location.reload();\r\n    } else {\r\n      console.log(\"Opted out of deleting appointment.\");\r\n    }\r\n  };\r\n\r\n  // Idea: Render in a form that will take in new data and change what is present on the screen.\r\n  const updateAppointment = (target) => {\r\n    console.log(\"updateAppointment received:\");\r\n    console.log(target);\r\n\r\n    if (window.confirm(\"Do you want to update this appointment?\") === true) {\r\n      console.log(\"Updating appointment entry!\");\r\n\r\n      // Pass the entire appointment to the editor form.\r\n      ReactDOM.render(\r\n        <EditForm appt={target} />,\r\n        document.getElementById(\"formSpace\")\r\n      );\r\n    } else {\r\n      console.log(\"Opted out of updating appointment.\");\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(\"Submitted!\");\r\n    console.log(data.retCode);\r\n    const info = { code: data.retCode, name: data.name };\r\n    let target = undefined;\r\n    console.log(info);\r\n\r\n    const appointments = await fetchData();\r\n    console.log(\"Appoinments fetched!\");\r\n    console.log(appointments);\r\n\r\n    let arrayLen = numProps(appointments);\r\n    console.log(\"appointment length = \" + arrayLen);\r\n\r\n    for (let i = 0; i < appointments.length; i++) {\r\n      console.log(appointments[i].name);\r\n      console.log(appointments[i].retCode);\r\n      if (\r\n        appointments[i].name === data.name &&\r\n        appointments[i].retCode === data.retCode\r\n      ) {\r\n        target = appointments[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    console.log(\"target =\");\r\n    console.log(target);\r\n\r\n    // Lookup appointment, if it exists, generate an Appointment element.\r\n    // Otherwise, post an error message.\r\n    if (target !== undefined) {\r\n      ReactDOM.render(\r\n        <div>\r\n          <ListContainer>\r\n            <P>Please note that your retrieval code has not been changed.</P>\r\n            <CardDiv>\r\n              <Info>\r\n                <List>\r\n                  <li>\r\n                    <b>Name: </b>\r\n                    {target.name}\r\n                  </li>\r\n                  <li>\r\n                    <b>E-mail: </b>\r\n                    {target.email}\r\n                  </li>\r\n                  <li>\r\n                    <b>Date: </b>\r\n                    {new Date(target.date).toDateString()}\r\n                  </li>\r\n                  <li>\r\n                    <b>Time: </b>\r\n                    {target.time}\r\n                  </li>\r\n                  <li>\r\n                    <b>Phone #:</b>\r\n                    {target.phoneNumber}\r\n                  </li>\r\n                  <li>\r\n                    <b>Appointment Type: </b>\r\n                    {target.apptType}\r\n                  </li>\r\n                  <li>\r\n                    <b>Notes: </b>\r\n                    {target.notes}\r\n                  </li>\r\n                </List>\r\n              </Info>\r\n              <ButtonDiv>\r\n                <AcceptButton onClick={() => updateAppointment(target)}>\r\n                  <FaPen />\r\n                </AcceptButton>\r\n                <DeleteButton onClick={() => deleteAppointment(target)}>\r\n                  <FaTimes />\r\n                </DeleteButton>\r\n              </ButtonDiv>\r\n            </CardDiv>\r\n          </ListContainer>\r\n        </div>,\r\n        document.getElementById(\"result\")\r\n      );\r\n    } else {\r\n      ReactDOM.render(\r\n        <P>No entry was found. Please verify your credentials.</P>,\r\n        document.getElementById(\"result\")\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <PageContainer>\r\n        <Title>Appoinment Retrieval</Title>\r\n        <H2>Enter your code below!</H2>\r\n        <FormWrapper>\r\n          <FormContainer onSubmit={handleSubmit(onSubmit)}>\r\n            <Label htmlFor=\"name\">Name</Label>\r\n            <TextFeild\r\n              type=\"text\"\r\n              name=\"name\"\r\n              ref={register({ required: true })}\r\n            />\r\n\r\n            <Label htmlFor=\"retCode\">Code</Label>\r\n            <TextFeild\r\n              type=\"text\"\r\n              name=\"retCode\"\r\n              ref={register({ required: true })}\r\n            />\r\n            <SubmitButton>Retrieve!</SubmitButton>\r\n          </FormContainer>\r\n        </FormWrapper>\r\n        <div id=\"formSpace\"></div>\r\n        <div id=\"result\"></div>\r\n      </PageContainer>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RetCode;\r\n","import {createContext} from \"react\";\r\n\r\n\r\n// By default, this context holds no data. \r\nexport default createContext(null);","// React allows us to use JSX to write \"HTML\" in a JS setting.\n// React.createElement(blahblahblah) <-- saves you from a\n// lot of these\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Home from \"./pages/home.js\";\nimport About from \"./pages/about.js\";\nimport Editor from \"./pages/editor\";\nimport Contact from \"./pages/contact\";\nimport SignIn from \"./pages/signin\";\nimport RetCode from \"./pages/retcode\";\nimport UserContext from \"./components/Context/UserContext\";\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  });\n\n  // When the app starts, check if there is a user token in local storage.\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n\n      // When we initally use this website the token will be null.\n      // We stave off errors by sending an empty string to the backend.\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n      const tokenRes = await axios.post(\n        \"http://localhost:5000/signin/tokenIsValid\",\n        null,\n        { headers: { \"x-auth-token\": token } }\n      );\n      if (tokenRes.data) {\n        // Get info of currently logged in user.\n        const userRes = await axios.get(\n          \"http://localhost:5000/signin/loggedin\",\n          {\n            headers: { \"x-auth-token\": token },\n          }\n        );\n        setUserData({\n          token,\n          user: userRes.data,\n        });\n      }\n      console.log(\"Logged in user detected: \" + tokenRes.data);\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  return (\n    <div className=\"bghelper\">\n      <div className=\"App\">\n        <Router>\n          <UserContext.Provider value={{ userData, setUserData }}>\n            <Navbar />\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/editor\" exact component={Editor} />\n              <Route path=\"/contact\" exact component={Contact} />\n              <Route path=\"/signin\" exact component={SignIn} />\n              <Route path=\"/retcode\" exact component={RetCode} />\n            </Switch>\n            {/* <Footer /> */}\n          </UserContext.Provider>\n        </Router>\n      </div>\n    </div>\n\n    // TODO: Add footer.\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Import library into a variable we can use to access library methods.\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\"; // for having app work offline\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\") // target root div in index.html\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}